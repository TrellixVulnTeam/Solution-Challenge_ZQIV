{"version":3,"sources":["utilities.js","components/Header.jsx","App.js","index.js"],"names":["labelMap","1","name","color","2","3","4","5","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","i","length","y","x","height","width","text","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke","Header","App","webcamRef","useRef","canvasRef","runCoco","a","tf","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","img","fromPixels","resized","resizeBilinear","casted","cast","expanded","expandDims","executeAsync","obj","console","log","array","getContext","requestAnimationFrame","useEffect","className","ref","muted","style","position","marginLeft","marginRight","left","right","textAlign","zindex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a3489cb.chunk.js","sourcesContent":["// Define our labelmap\nconst labelMap = {\n    1:{name:'Hello', color:'red'},\n    2:{name:'Thank You', color:'yellow'},\n    3:{name:'I Love You', color:'lime'},\n    4:{name:'Yes', color:'blue'},\n    5:{name:'No', color:'purple'},\n}\n\n// Define a drawing function\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx)=>{\n    for(let i=0; i<=boxes.length; i++){\n        if(boxes[i] && classes[i] && scores[i]>threshold){\n            // Extract variables\n            const [y,x,height,width] = boxes[i]\n            const text = classes[i]\n            \n            // Set styling\n            ctx.strokeStyle = labelMap[text]['color']\n            ctx.lineWidth = 10\n            ctx.fillStyle = 'white'\n            ctx.font = '30px Arial'         \n            \n            // DRAW!!\n            ctx.beginPath()\n            ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i]*100)/100, x*imgWidth, y*imgHeight-10)\n            ctx.rect(x*imgWidth, y*imgHeight, width*imgWidth/2, height*imgHeight/1.5);\n            ctx.stroke()\n        }\n    }\n}","import React from \"react\";\n\nconst Header = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h1>Real Time Sign Language Detection </h1>\n\t\t\t<h3>Perform your action in the webcam!</h3>\n\t\t</div>\n\t);\n};\n\nexport default Header;\n","// Import dependencies\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { nextFrame } from \"@tensorflow/tfjs\";\n// 2. TODO - Import drawing utility here\n// e.g. import { drawRect } from \"./utilities\";\nimport { drawRect } from \"./utilities\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n\tconst webcamRef = useRef(null);\n\tconst canvasRef = useRef(null);\n\n\t// Main function\n\tconst runCoco = async () => {\n\t\t// 3. TODO - Load network\n\t\t// e.g. const net = await cocossd.load();\n\t\t// https://tensorflowjsrealtimemodel.s3.au-syd.cloud-object-storage.appdomain.cloud/model.json\n\t\tconst net = await tf.loadGraphModel(\n\t\t\t\"https://tensorflowjsrealtimemodel.s3.au-syd.cloud-object-storage.appdomain.cloud/model.json\"\n\t\t);\n\n\t\t//  Loop and detect hands\n\t\tsetInterval(() => {\n\t\t\tdetect(net);\n\t\t}, 16.7);\n\t};\n\n\tconst detect = async (net) => {\n\t\t// Check data is available\n\t\tif (\n\t\t\ttypeof webcamRef.current !== \"undefined\" &&\n\t\t\twebcamRef.current !== null &&\n\t\t\twebcamRef.current.video.readyState === 4\n\t\t) {\n\t\t\t// Get Video Properties\n\t\t\tconst video = webcamRef.current.video;\n\t\t\tconst videoWidth = webcamRef.current.video.videoWidth;\n\t\t\tconst videoHeight = webcamRef.current.video.videoHeight;\n\n\t\t\t// Set video width\n\t\t\twebcamRef.current.video.width = videoWidth;\n\t\t\twebcamRef.current.video.height = videoHeight;\n\n\t\t\t// Set canvas height and width\n\t\t\tcanvasRef.current.width = videoWidth;\n\t\t\tcanvasRef.current.height = videoHeight;\n\n\t\t\t// 4. TODO - Make Detections\n\t\t\tconst img = tf.browser.fromPixels(video);\n\t\t\tconst resized = tf.image.resizeBilinear(img, [640, 480]);\n\t\t\tconst casted = resized.cast(\"int32\");\n\t\t\tconst expanded = casted.expandDims(0);\n\t\t\tconst obj = await net.executeAsync(expanded);\n\t\t\tconsole.log(obj);\n\n\t\t\tconst boxes = await obj[1].array();\n\t\t\tconst classes = await obj[2].array();\n\t\t\tconst scores = await obj[4].array();\n\n\t\t\t// Draw mesh\n\t\t\tconst ctx = canvasRef.current.getContext(\"2d\");\n\n\t\t\t// 5. TODO - Update drawing utility\n\t\t\t// drawSomething(obj, ctx)\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tdrawRect(\n\t\t\t\t\tboxes[0],\n\t\t\t\t\tclasses[0],\n\t\t\t\t\tscores[0],\n\t\t\t\t\t0.8,\n\t\t\t\t\tvideoWidth,\n\t\t\t\t\tvideoHeight,\n\t\t\t\t\tctx\n\t\t\t\t);\n\t\t\t});\n\n\t\t\ttf.dispose(img);\n\t\t\ttf.dispose(resized);\n\t\t\ttf.dispose(casted);\n\t\t\ttf.dispose(expanded);\n\t\t\ttf.dispose(obj);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\trunCoco();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t<Webcam\n\t\t\t\tref={webcamRef}\n\t\t\t\tmuted={true}\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\t\tmarginRight: \"auto\",\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\tzindex: 9,\n\t\t\t\t\twidth: 640,\n\t\t\t\t\theight: 480,\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<canvas\n\t\t\t\tref={canvasRef}\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tmarginLeft: \"auto\",\n\t\t\t\t\tmarginRight: \"auto\",\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\tzindex: 8,\n\t\t\t\t\twidth: 640,\n\t\t\t\t\theight: 480,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}